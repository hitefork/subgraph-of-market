type Assign @entity(immutable: true) {
  id: Bytes!
  to: Bytes! # address
  punkIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PunkTransfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  punkIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PunkOffered @entity(immutable: true) {
  id: Bytes!
  punkIndex: BigInt! # uint256
  minValue: BigInt! # uint256
  toAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PunkBidEntered @entity(immutable: true) {
  id: Bytes!
  punkIndex: BigInt! # uint256
  value: BigInt! # uint256
  fromAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PunkBidWithdrawn @entity(immutable: true) {
  id: Bytes!
  punkIndex: BigInt! # uint256
  value: BigInt! # uint256
  fromAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PunkBought @entity(immutable: true) {
  id: Bytes!
  punkIndex: BigInt! # uint256
  value: BigInt! # uint256
  fromAddress: Bytes! # address
  toAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PunkNoLongerForSale @entity(immutable: true) {
  id: Bytes!
  punkIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type User @entity(immutable: true){
  id: Bytes! #用户ID
  punkIndex: BigInt! # uint256
  count:BigInt! #交易次数
  totalpunks: BigInt! #持有的punk总量
  numPunksBought: BigInt! #出售的punk总数
  numPunkssold: BigInt! #购买的punk总数
}
enum TraitType {
  TYPE
  ACCESSORY
}
type Trait @entity(immutable: true) {
  "Trait"
  id: ID!
  type: TraitType!
  metaDatas: [MetaData!]! @derivedFrom(field: "traits")

  "Number of Punks with this trait"
  numberOfNfts: BigInt!
}
type MetaData @entity(immutable: true) {
  id: ID!

  tokenId: BigInt!

  "URI of Punk"
  tokenURI: String!

  "Punk image"
  image: String

  "Punk Svg image"
  svg: String

  "Contract URI"
  contractURI: String!



  "Punk Traits"
  traits: [Trait!]!
}
